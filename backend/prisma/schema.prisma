// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id          String   @id @default(uuid())

  email       String   @unique

  password    String

  firstName   String

  lastName    String

  createdAt   DateTime @default(now())

  updatedAt   DateTime @updatedAt

  accounts     Account[]

  transactions Transaction[]

  goals        Goal[]

  insights     Insight[]

  @@map("users")

}

  

model Account {

  id          String      @id @default(uuid())

  userId      String

  name        String

  type        AccountType

  balance     Float       @default(0)

  currency    String      @default("USD")

  isActive    Boolean     @default(true)

  bankName    String?

  accountNumber String?

  createdAt   DateTime    @default(now())

  updatedAt   DateTime    @updatedAt

  user         User          @relation(fields: [userId], references: [id])

  transactions Transaction[]

  @@map("accounts")

}

  

model Transaction {

  id          String            @id @default(uuid())

  userId      String

  accountId   String

  amount      Float

  description String

  category    TransactionCategory

  date        DateTime

  type        TransactionType

  tags        String[]

  createdAt   DateTime          @default(now())

  updatedAt   DateTime          @updatedAt

  user    User    @relation(fields: [userId], references: [id])

  account Account @relation(fields: [accountId], references: [id])

  @@map("transactions")

}

  

model Goal {

  id          String     @id @default(uuid())

  userId      String

  title       String

  description String?

  targetAmount Float

  currentAmount Float     @default(0)

  targetDate  DateTime

  category    GoalCategory

  isActive    Boolean    @default(true)

  createdAt   DateTime   @default(now())

  updatedAt   DateTime   @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("goals")

}

  

model Insight {

  id          String      @id @default(uuid())

  userId      String

  type        InsightType

  title       String

  description String

  priority    Priority

  isRead      Boolean     @default(false)

  createdAt   DateTime    @default(now())

  user User @relation(fields: [userId], references: [id])

  @@map("insights")

}

  

enum AccountType {

  CHECKING

  SAVINGS

  CREDIT

  INVESTMENT

}

  

enum TransactionType {

  INCOME

  EXPENSE

  TRANSFER

}

  

enum TransactionCategory {

  FOOD_DINING

  TRANSPORTATION

  SHOPPING

  ENTERTAINMENT

  BILLS_UTILITIES

  HEALTHCARE

  EDUCATION

  TRAVEL

  INCOME_SALARY

  INCOME_BUSINESS

  TRANSFER

  OTHER

}

  

enum GoalCategory {

  EMERGENCY_FUND

  HOUSE_DOWN_PAYMENT

  VACATION

  CAR

  DEBT_PAYOFF

  RETIREMENT

  OTHER

}

  

enum InsightType {

  SPENDING_ALERT

  SAVINGS_OPPORTUNITY

  BUDGET_RECOMMENDATION

  GOAL_PROGRESS

  UNUSUAL_ACTIVITY

}

  

enum Priority {

  LOW

  MEDIUM

  HIGH

  URGENT

}